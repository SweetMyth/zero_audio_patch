#!/sbin/sh
# Powered by Magisk (@topjohnwu)

Pref="[Magisk Module]"
TMP=/dev/tmp
MP=/dev/magisk_img
OUTFD=$2
ZIP=$3

# Default permissions 644
umask 022

# Initial cleanup
rm -rf $TMP 2>/dev/null
mkdir -p $TMP

# Echo before loading util_functions
ui_print() { echo "$1"; }

imgless() {
	[ $MAGISK_VER_CODE -gt 18100 ]
	return $?
}

mount /data 2>/dev/null

# Load utility functions
util=/data/adb/magisk/util_functions.sh
if [ -f $util ]; then
	. $util
	NVBASE=/data/adb
else
	ui_print "$Pref - Install/Update Magisk!"
	exit 1
fi

# Preparation for flashable zips
setup_flashable

# Mount partitions
mount_partitions

# Detect version and architecture
api_level_arch_detect

# Setup busybox and binaries
$BOOTMODE && boot_actions || recovery_actions

# Extract configs
unzip -oj "$ZIP" module.prop user_config.txt 'custom/*' -d $TMP >&2

if imgless; then
	$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
	MODULEROOT=$NVBASE/$MODDIRNAME
else
	$BOOTMODE && IMGNAME=magisk_merge.img || IMGNAME=magisk.img
	IMG=$NVBASE/$IMGNAME
	request_zip_size_check "$ZIP"
	mount_magisk_img
	MODULEROOT=$MOUNTPATH
fi

. $TMP/user_config.txt
. $TMP/module.sh
MODID=`grep_prop id $TMP/module.prop`
MODNAME=`grep_prop name $TMP/module.prop`
MODVER=`grep_prop version $TMP/module.prop`
MODAUTH=`grep_prop author $TMP/module.prop`
MODPATH=$MODULEROOT/$MODID

# Module control
if imgless; then
	IMOD=$NVBASE/modules/$MODID
	IMODU=$NVBASE/modules_update/$MODID
else
	IMOD=/sbin/.magisk/img/$MODID
fi

if [ -d $IMOD ]; then
	IMODNAME=`grep_prop name $IMOD/module.prop`
	IMODVER=`grep_prop version $IMOD/module.prop`
	if [ "$MODVER" != "$IMODVER" ]; then
		ui_print "$Pref - $IMODNAME $IMODVER version is different"
		ui_print "- Updating to $MODNAME $MODVER"
		rm -rf $IMOD 2>/dev/null
		rm -rf $IMODU 2>/dev/null
		ui_print ""
	else
		ui_print "$Pref - $MODNAME $IMODVER is exist!"
		ui_print "- Uninstalling"
		rm -rf $IMOD 2>/dev/null
		rm -rf $IMODU 2>/dev/null
		cd /
		imgless || unmount_magisk_img
		$BOOTMODE || recovery_cleanup
		rm -rf $TMP $MOUNTPATH
		ui_print "- Done"
		exit 0
	fi
fi

# Check supported device/board
if [ "$device_check" -gt "0" ]; then
	device="$(getprop ro.build.product)"
	for i in $device_list; do
		if [ "$i" == "$device" ]; then
			supported=1
			ui_print "- $i"
			break
		fi
	done
fi

if [ "$board_check" -gt "0" ]; then
	board="$(getprop ro.product.board)"
	for i in $board_list; do
		if [ "$i" == "$board" ]; then
			supported=1
			ui_print "- $i"
			break
		fi
	done
fi

if [ "$device_check" -gt "0" ] || [ "$board_check" -gt "0" ]; then
	if [ -z "$supported" ]; then
		ui_print "$Pref - $device $board is not supported!"
		exit 1
	fi
fi

# Module info
ui_print "$Pref - $MODNAME"
ui_print "Version - $MODVER"
ui_print "Author - $MODAUTH"
ui_print "Powered by Magisk (@topjohnwu)"

# Cleanup module folder
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

# Extract files
ui_print "- Extracting files"
unzip -o "$ZIP" module.prop 'files/*' 'system/*' -d $MODPATH >&2

# Custom installer from custom/module.sh
custom_installer

touch $MODPATH/auto_mount

# Module info in Magisk Manager
if $BOOTMODE; then
	mktouch $IMOD/update
	cp -af $TMP/module.prop $IMOD/module.prop
fi

# Permissions
ui_print "- Setting permissions"
set_perm_recursive $MODPATH 0 0 0755 0644

# Final
cd /
imgless || unmount_magisk_img
$BOOTMODE || recovery_cleanup
rm -rf $TMP $MOUNTPATH
ui_print "- Done"
exit 0