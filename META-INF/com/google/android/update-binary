#!/sbin/sh
# Zero Magisk Module by vlad113
# Powered by Magisk (@topjohnwu)
Pref="[Magisk Module]"
TEMP=/dev/tmp
INSTALL=$TEMP/install
MOUNTPATH=$TEMP/magisk_img
OUTFD=$2
ZIP=$3

# Permissions 644
umask 022

# Cleanup temp folder
rm -rf $TEMP 2>/dev/null
mkdir -p $INSTALL

# Magisk API
ui_print() { echo "$1"; }

mount /data 2>/dev/null
util=magisk/util_functions.sh
if [ -f /data/adb/$util ]; then
	. /data/adb/$util
elif [ -f /data/$util ]; then
	NVBASE=/data
	. /data/$util
else
	ui_print "$Pref - Install/Update Magisk!"
	exit 1
fi

# if device booted using another img
$BOOTMODE && IMG=$NVBASE/magisk_merge.img

setup_flashable
mount_partitions
api_level_arch_detect

# busybox initializing
$BOOTMODE && boot_actions || recovery_actions

# Install
unzip -o "$ZIP" module.prop module.sh -d $INSTALL >&2

. $INSTALL/module.sh
MODID=`grep_prop id $INSTALL/module.prop`
MODNAME=`grep_prop name $INSTALL/module.prop`
MODVER=`grep_prop version $INSTALL/module.prop`
MODAUTH=`grep_prop author $INSTALL/module.prop`
MODPATH=$MOUNTPATH/$MODID

# Remove module if already installed
# !Not work in TWRP
if [ -d /sbin/.core/img/$MODID ]; then
	ui_print "$Pref - $MODNAME is already installed"
	ui_print "- Module removing"
	rm -rf /sbin/.core/img/$MODID 2>/dev/null
	ui_print "- $MODNAME now is deleted"
	exit 0
fi

# Check supported device
if [ "$device_check" ]; then
	device="$(getprop ro.product.device)"
	for i in $device1 $device2 $device3 $device4 $device5 $device6 $device7 $device8 $device9; do
		if [ "$device" == "$i" ]; then
			supported=1
			break
		fi
	done
	if [ ! "$supported" ]; then
		ui_print "$Pref - $device is not supported!"
		exit 1
	fi
fi

# Module name
ui_print "$Pref - $MODNAME"
ui_print "Version - $MODVER"
ui_print "Author - $MODAUTH"
ui_print "Powered by Magisk (@topjohnwu)"

# Size check
request_zip_size_check "$ZIP"
mount_magisk_img

# Cleanup mod folder
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

# Extract files
ui_print "- Extracting files"
unzip -o "$ZIP" -d $MODPATH >&2
rm -rf $MODPATH/META-INF
rm -rf $MODPATH/module.sh

# Custom module in module.sh
custom_module

touch $MODPATH/auto_mount

# if booted update info in Magisk Manager
if $BOOTMODE; then
	mktouch /sbin/.core/img/$MODID/update
fi

# Permissions
set_perm_recursive  $MODPATH  0  0  0755  0644

unmount_magisk_img

# Cleanup
$BOOTMODE || recovery_cleanup
rm -rf $TEMP
exit 0